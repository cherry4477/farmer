{{ range $service := lsdir "/services" }}
    {{ if ls (printf "/services/%s/http" $service) }}
        upstream backend_{{ base $service }} {
            least_conn;{{range getvs (printf "/services/%s/http/*" $service)}}
            server {{.}};{{end}}
        }

        server {
            listen 80;

            {{ range getvs (printf "/services/%s/domains/*" $service) }}
            server_name {{.}};{{end}}

            client_max_body_size 100M;

            location / {
                proxy_pass http://backend_{{base $service}};
                proxy_redirect off;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Service-Name $service;
            }
        }

        {{ if ls (printf "/services/%s/ssl" $service) }}
        server {
            listen 443 ssl;

            {{ range getvs (printf "/services/%s/domains/*" $service) }}
            server_name {{.}};{{end}}

            ssl_certificate {{ getv (printf "/services/%s/ssl/certificate_path" $service) }};
            ssl_certificate_key {{ getv (printf "/services/%s/ssl/key_path" $service) }};
            ssl_protocols  SSLv2 SSLv3 TLSv1;
            ssl_session_timeout 5m;

            client_max_body_size 100M;

            location / {
                proxy_pass       http://backend_{{base $service}};
                proxy_redirect   off;
                proxy_set_header Host             $host;
                proxy_set_header X-Real-IP        $remote_addr;
                proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
                proxy_set_header X-Service-Name   {{ $service }};
                proxy_set_header X-Client-Verify  SUCCESS;
                proxy_set_header X-Client-DN      $ssl_client_s_dn;
                proxy_set_header X-SSL-Subject    $ssl_client_s_dn;
                proxy_set_header X-SSL-Issuer     $ssl_client_i_dn;
            }
        }
        {{ end }}

    {{ end }}
{{ end }}

server {
    listen 80 default_server;
    server_name  _;

    error_page 404 /404.html;

    location = /404.html {
        root /usr/share/nginx/html;
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods GET always;
        internal;
    }
}
